# Adapted from reth: https://github.com/paradigmxyz/reth/blob/main/.github/workflows/book.yml
name: Book

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    name: test
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Install mdbook
        run: |
          mkdir mdbook
          curl -sSL https://github.com/rust-lang/mdBook/releases/download/v0.4.14/mdbook-v0.4.14-x86_64-unknown-linux-gnu.tar.gz | tar -xz --directory=./mdbook
          echo $(pwd)/mdbook >> $GITHUB_PATH

      - name: Install mdbook-template
        run: |
          mkdir mdbook-template
          curl -sSL https://github.com/sgoudham/mdbook-template/releases/latest/download/mdbook-template-x86_64-unknown-linux-gnu.tar.gz | tar -xz --directory=./mdbook-template
          echo $(pwd)/mdbook-template >> $GITHUB_PATH

      - name: Run tests
        run: mdbook test

  lint:
    runs-on: ubuntu-latest
    name: lint
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Install mdbook-linkcheck
        run: cargo binstall --no-confirm mdbook-linkcheck

      - name: Run linkcheck
        run: mdbook-linkcheck --standalone

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: dtolnay/rust-toolchain@nightly

      - name: Install mdbook
        run: |
          mkdir mdbook
          curl -sSL https://github.com/rust-lang/mdBook/releases/download/v0.4.14/mdbook-v0.4.14-x86_64-unknown-linux-gnu.tar.gz | tar -xz --directory=./mdbook
          echo $(pwd)/mdbook >> $GITHUB_PATH

      - name: Install mdbook-template
        run: |
          mkdir mdbook-template
          curl -sSL https://github.com/sgoudham/mdbook-template/releases/latest/download/mdbook-template-x86_64-unknown-linux-gnu.tar.gz | tar -xz --directory=./mdbook-template
          echo $(pwd)/mdbook-template >> $GITHUB_PATH

      - name: Install mdbook-mermaid
        run: cargo install mdbook-mermaid

      - name: Build mdbook
        run: mdbook build

      - name: Generate sitemap
        run: |
          npm install static-sitemap-cli
          cd target/book
          npx sscli --no-clean --base https://www.huff-neo.rs

      - name: Build doc
        run: make doc

      - name: Move docs to book folder
        run: mv target/doc target/book/docs

      - name: Archive artifact
        shell: sh
        run: |
          chmod -c -R +rX "target/book" |
          while read line; do
             echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
          tar \
            --dereference --hard-dereference \
            --directory "target/book" \
            -cvf "$RUNNER_TEMP/artifact.tar" \
            --exclude=.git \
            --exclude=.github \
            .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: ${{ runner.temp }}/artifact.tar
          retention-days: 1
          if-no-files-found: error

  deploy:
    if: github.ref_name == 'main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [test, lint, build]

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    timeout-minutes: 30

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
